// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OS.Installer.proto

#ifndef PROTOBUF_OS_2eInstaller_2eproto__INCLUDED
#define PROTOBUF_OS_2eInstaller_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cloudos {
namespace config {
namespace os {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_OS_2eInstaller_2eproto();
void protobuf_AssignDesc_OS_2eInstaller_2eproto();
void protobuf_ShutdownFile_OS_2eInstaller_2eproto();

class Installer;

// ===================================================================

class Installer : public ::google::protobuf::Message {
 public:
  Installer();
  virtual ~Installer();

  Installer(const Installer& from);

  inline Installer& operator=(const Installer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Installer& default_instance();

  void Swap(Installer* other);

  // implements Message ----------------------------------------------

  Installer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Installer& from);
  void MergeFrom(const Installer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool install_management = 20 [default = false];
  inline bool has_install_management() const;
  inline void clear_install_management();
  static const int kInstallManagementFieldNumber = 20;
  inline bool install_management() const;
  inline void set_install_management(bool value);

  // optional bool install_mariadb = 25 [default = false];
  inline bool has_install_mariadb() const;
  inline void clear_install_mariadb();
  static const int kInstallMariadbFieldNumber = 25;
  inline bool install_mariadb() const;
  inline void set_install_mariadb(bool value);

  // optional bool install_rabbitmq = 30 [default = false];
  inline bool has_install_rabbitmq() const;
  inline void clear_install_rabbitmq();
  static const int kInstallRabbitmqFieldNumber = 30;
  inline bool install_rabbitmq() const;
  inline void set_install_rabbitmq(bool value);

  // optional bool install_keystone = 40 [default = false];
  inline bool has_install_keystone() const;
  inline void clear_install_keystone();
  static const int kInstallKeystoneFieldNumber = 40;
  inline bool install_keystone() const;
  inline void set_install_keystone(bool value);

  // optional bool install_quantum = 45 [default = false];
  inline bool has_install_quantum() const;
  inline void clear_install_quantum();
  static const int kInstallQuantumFieldNumber = 45;
  inline bool install_quantum() const;
  inline void set_install_quantum(bool value);

  // optional bool install_glance = 50 [default = false];
  inline bool has_install_glance() const;
  inline void clear_install_glance();
  static const int kInstallGlanceFieldNumber = 50;
  inline bool install_glance() const;
  inline void set_install_glance(bool value);

  // optional bool install_cinder = 55 [default = false];
  inline bool has_install_cinder() const;
  inline void clear_install_cinder();
  static const int kInstallCinderFieldNumber = 55;
  inline bool install_cinder() const;
  inline void set_install_cinder(bool value);

  // optional bool install_nova = 60 [default = false];
  inline bool has_install_nova() const;
  inline void clear_install_nova();
  static const int kInstallNovaFieldNumber = 60;
  inline bool install_nova() const;
  inline void set_install_nova(bool value);

  // @@protoc_insertion_point(class_scope:cloudos.config.os.Installer)
 private:
  inline void set_has_install_management();
  inline void clear_has_install_management();
  inline void set_has_install_mariadb();
  inline void clear_has_install_mariadb();
  inline void set_has_install_rabbitmq();
  inline void clear_has_install_rabbitmq();
  inline void set_has_install_keystone();
  inline void clear_has_install_keystone();
  inline void set_has_install_quantum();
  inline void clear_has_install_quantum();
  inline void set_has_install_glance();
  inline void clear_has_install_glance();
  inline void set_has_install_cinder();
  inline void clear_has_install_cinder();
  inline void set_has_install_nova();
  inline void clear_has_install_nova();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool install_management_;
  bool install_mariadb_;
  bool install_rabbitmq_;
  bool install_keystone_;
  bool install_quantum_;
  bool install_glance_;
  bool install_cinder_;
  bool install_nova_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_OS_2eInstaller_2eproto();
  friend void protobuf_AssignDesc_OS_2eInstaller_2eproto();
  friend void protobuf_ShutdownFile_OS_2eInstaller_2eproto();

  void InitAsDefaultInstance();
  static Installer* default_instance_;
};
// ===================================================================


// ===================================================================

// Installer

// optional bool install_management = 20 [default = false];
inline bool Installer::has_install_management() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Installer::set_has_install_management() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Installer::clear_has_install_management() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Installer::clear_install_management() {
  install_management_ = false;
  clear_has_install_management();
}
inline bool Installer::install_management() const {
  return install_management_;
}
inline void Installer::set_install_management(bool value) {
  set_has_install_management();
  install_management_ = value;
}

// optional bool install_mariadb = 25 [default = false];
inline bool Installer::has_install_mariadb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Installer::set_has_install_mariadb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Installer::clear_has_install_mariadb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Installer::clear_install_mariadb() {
  install_mariadb_ = false;
  clear_has_install_mariadb();
}
inline bool Installer::install_mariadb() const {
  return install_mariadb_;
}
inline void Installer::set_install_mariadb(bool value) {
  set_has_install_mariadb();
  install_mariadb_ = value;
}

// optional bool install_rabbitmq = 30 [default = false];
inline bool Installer::has_install_rabbitmq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Installer::set_has_install_rabbitmq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Installer::clear_has_install_rabbitmq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Installer::clear_install_rabbitmq() {
  install_rabbitmq_ = false;
  clear_has_install_rabbitmq();
}
inline bool Installer::install_rabbitmq() const {
  return install_rabbitmq_;
}
inline void Installer::set_install_rabbitmq(bool value) {
  set_has_install_rabbitmq();
  install_rabbitmq_ = value;
}

// optional bool install_keystone = 40 [default = false];
inline bool Installer::has_install_keystone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Installer::set_has_install_keystone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Installer::clear_has_install_keystone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Installer::clear_install_keystone() {
  install_keystone_ = false;
  clear_has_install_keystone();
}
inline bool Installer::install_keystone() const {
  return install_keystone_;
}
inline void Installer::set_install_keystone(bool value) {
  set_has_install_keystone();
  install_keystone_ = value;
}

// optional bool install_quantum = 45 [default = false];
inline bool Installer::has_install_quantum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Installer::set_has_install_quantum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Installer::clear_has_install_quantum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Installer::clear_install_quantum() {
  install_quantum_ = false;
  clear_has_install_quantum();
}
inline bool Installer::install_quantum() const {
  return install_quantum_;
}
inline void Installer::set_install_quantum(bool value) {
  set_has_install_quantum();
  install_quantum_ = value;
}

// optional bool install_glance = 50 [default = false];
inline bool Installer::has_install_glance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Installer::set_has_install_glance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Installer::clear_has_install_glance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Installer::clear_install_glance() {
  install_glance_ = false;
  clear_has_install_glance();
}
inline bool Installer::install_glance() const {
  return install_glance_;
}
inline void Installer::set_install_glance(bool value) {
  set_has_install_glance();
  install_glance_ = value;
}

// optional bool install_cinder = 55 [default = false];
inline bool Installer::has_install_cinder() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Installer::set_has_install_cinder() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Installer::clear_has_install_cinder() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Installer::clear_install_cinder() {
  install_cinder_ = false;
  clear_has_install_cinder();
}
inline bool Installer::install_cinder() const {
  return install_cinder_;
}
inline void Installer::set_install_cinder(bool value) {
  set_has_install_cinder();
  install_cinder_ = value;
}

// optional bool install_nova = 60 [default = false];
inline bool Installer::has_install_nova() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Installer::set_has_install_nova() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Installer::clear_has_install_nova() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Installer::clear_install_nova() {
  install_nova_ = false;
  clear_has_install_nova();
}
inline bool Installer::install_nova() const {
  return install_nova_;
}
inline void Installer::set_install_nova(bool value) {
  set_has_install_nova();
  install_nova_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace config
}  // namespace cloudos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OS_2eInstaller_2eproto__INCLUDED
